//The purpose of the file - to train blind typing, as well as in the process to repeat a set of different kata, algorithms, rules so many times to type without thinking 


const array = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
//1)
// function binarySearch(array, item) {
//     let start = 0
//     let end = array.length
//     let middle;
//     let found = false
//     let position = -1
//     while (found === false && start <= end) {        middle = Math.floor((start + end) / 2);
//         if (array[middle] === item) {
//             found = true
//             position = middle
//             return position;
//         }
//         if (item < array[middle]) {
//             end = middle - 1
//         } else {
//             start = middle + 1
//         }
//     }
//     return position;
// }

//2)
// function binarySearch(array, item){
//     let start = 0;
//     let end = array.length;
//     let middle;
//     let found = false; 
//     let position = -1;

//     while(found === false && start <= end){

//         middle = Math.floor((start + end) / 2);

//         if(array[middle] === item){
//             found = true;
//             position = middle;
//             return position;
//         }
//         if(item < array[middle]){
//             end = middle - 1
//         }else{
//             start = middle + 1
//         }
//     }
//     return position;    
// }

//3)
// function binarySearch(array, item){
//     let start    = 0,
//         end      = array.length,
//         middle   = 0,
//         found    = false,
//         position = -1; 
    
//     while(found === false && start <= end){
//         middle = Math.floor((start + end) / 2);

//         if(array[middle] === item){
//             found = true;
//             position = middle;
//             return position
//         }

//         if(item < array[middle]){
//             end = middle - 1
//         }else{
//             start = middle + 1
//         }
//     }

//     return position;
// }


//4)
// function binarySearch(array, item){
//     let start    = 0, 
//         end      = array.length,
//         middle   = 0,
//         isFound  = false;

//     while(!isFound && start <= end){

//         middle = Math.floor((start + end) / 2) 

//         if(array[middle] === item){
//             return middle;
//         }

//         if(item <  array[middle]){
//             end = middle - 1 
//         }else{
//             start = middle + 1
//         }
//     }

//     return -1
// }

//5)
// function binarySearch(arary, item){
//     let start    = 0,
//         end      = array.length,
//         middle   = 0,
//         isFound  = false;

//     while(!isFound && start <= end){
//         middle = Math.floor((start + end) / 2)

//         if(array[middle] === item){
//             return middle;
//         }

//         if(item > array[middle]){
//             start = middle + 1;
//         }else{
//             end   = middle - 1
//         }
//     }

//     return -1
// }

//6)
function binarySearch(array, item){
    let isFound = false,
        end     = array.length,
        middle  = 0,
        start   = 0;

    while(!isFound && start <= end){
        middle = Math.floor((start + end) / 2)

        if(array[middle] === item){
            return middle;
        }

        if(item > array[middle]){
            start = middle + 1
        }else{
            end = middle - 1
        }
    }

    return -1
}

//1)
// function recursiveBinarySearch(array, item, start, end) {
//     let middle = Math.floor((start + end) / 2);    if (item === array[middle]) {
//         return middle
//     }
//     if (item < array[middle]) {
//         return recursiveBinarySearch(array, item, 0, middle - 1 )
//     } else {
//         return recursiveBinarySearch(array, item, middle + 1, end )
//     }
// }

//2)
// function recursiveBinarySearch(array, item, start, end) {
//     let middle = Math.floor((start + end) / 2)

//     if(item === array[middle]){
//         return middle
//     }

//     if(item < array[middle]){
//         return recursiveBinarySearch(array, item, 0, middle - 1)
//     }else{
//         return recursiveBinarySearch(array, item, middle + 1, end)
//     }
// }

//3)

// function recursiveBinarySearch(array, item, start, end){
//     let middle = Math.floor((start + end) / 2)

//     if(item === array[middle]){
//         return middle
//     }

//     if(item < array[middle]){
//         return recursiveBinarySearch(array, item, 0, middle - 1)
//     }else{
//         return recursiveBinarySearch(array, item, middle + 1, end)
//     }
// }

//4) 

// function recursiveBinarySearch(array, item, start, end){
//     let middle = Math.floor((start + end) / 2)

//     if(item === array[middle]){
//         return middle
//     }

//     if(item < array[middle]){
//         return recursiveBinarySearch(array, item, 0, middle - 1)
//     }else{
//         return recursiveBinarySearch(array, item, middle + 1, end)
//     }
// }

//5) 

// function recursiveBinarySearch(array, item, start, end){
//     let middle = Math.floor((start + end) / 2)

//     if(item === array[middle]){
//         return middle
//     }

//     if(item < array[middle]){
//         return recursiveBinarySearch(array, item, 0, middle - 1)
//     }else{
//         return recursiveBinarySearch(array, item, middle + 1, end)
//     }
// }

//6)
function recursiveBinarySearch(array, item, start, end){
    let middle = Math.floor((start + end) / 2)

    if(item === array[middle]){
        return middle
    }

    if(item < array[middle]){
        return recursiveBinarySearch(array, item, 0, middle - 1)
    }else{
        return recursiveBinarySearch(array, item, middle + 1, end)
    }
}

console.log('binarySearch(array, 6) ', binarySearch(array, 6))
console.log('recursiveBinarySearch(array, 6, 0, array.length) ', recursiveBinarySearch(array, 6, 0, array.length))

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------

const arrForSort = [0,3,2,5,6,8,1,9,4,2,1,2,9,6,4,1,7,-1, -5, 23,6,2,35,6,3,32] 


//1)
// function selectionSort(array) {
//     for (let i = 0; i < array.length; i++) {
//         let indexMin = i
//         for (let j = i+1; j < array.length; j++) {
//             if (array[j] < array[indexMin]) {
//                 indexMin = j
//             }
//         }
//         let tmp = array[i]
//         array[i] = array[indexMin]
//         array[indexMin] = tmp
//     }
//     return array
// }

//2)
// function selectionSort(array) {
//     for(let i = 0; i < array.length; i++){
//         let indexMin = i;

//         for(let j = i+1; j < array.length; j++){
//             if(array[j] < array[indexMin]) {
//                 indexMin = j
//             }
//         }

//         let tmp = array[i]
//         array[i] = array[indexMin]
//         array[indexMin] = tmp
//     }
//     return array
// }

//3)
// function selectionSort(array){
//     for(let i = 0; i < array.length; i++){
//         let indexMin = i;

//         for(let j = i + 1; j < array.length; j++){
//             if(array[j] < array[indexMin]){
//                 indexMin = j;
//             }
//         }

//         let tmp = array[i]
//         array[i] = array[indexMin]
//         array[indexMin] = tmp
//     }

//     return array
// }

//4)

// function selectionSort(array){
//     for(let i = 0; i < array.length; i++){
//         let indexMin = i;

//         for(let j = i + 1; j < array.length; j++){
//             if(array[j] < array[indexMin]){
//                 indexMin = j;
//             }
//         }
//         let tmp = array[i];
//         array[i] = array[indexMin]
//         array[indexMin] = tmp
//     }

//     return array
// }

//5)
// function selectionSort(array){
//     for(let i = 0; i < array.length; i++){
//         let indexMin = i;

//         for(let j = i + 1; j < array.length; j++){
//             if(array[j] < array[indexMin]){
//                 indexMin = j;
//             }
//         }

//         let tmp = array[i];
//         array[i] = array[indexMin]
//         array[indexMin] = tmp
//     }

//     return array
// }

//6)
function selectionSort(array){
    for(let i = 0; i < array.length; i++){
        let indexMin = i;

        for(let j = i + 1; j < array.length; j++){
            if(array[j] < array[indexMin]){
                indexMin = j;
            }
        }

        let tmp = array[i];
        array[i] = array[indexMin];
        array[indexMin] = tmp;
    }

    return array
}

console.log('selectionSort(arrForSort) ', selectionSort(arrForSort))

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
const arrForSort2 = [0,3,2,5,6,8,1,9,4,2,1,2,9,6,4,1,7,-1, -5, 23,6,2,35,6,3,32] 

//1)
// function bubbleSort(array) {
//     for (let i = 0; i < array.length; i++) {
//         for (let j = 0; j < array.length; j++) {
//             if (array[j + 1] < array[j]) {
//                 let tmp = array[j]
//                 array[j] = array[j+1]
//                 array[j+1] = tmp
//             }
//         }
//     }
//     return array
// }

//2)
// function bubbleSort(array){
//     for(let i = 0; i < array.length; i++){
//         for(let j = 0; j < array.length; j++){
//             if(array[j+1] < array[j]){
//                 let tmp = array[j]
//                 array[j] = array[j + 1]
//                 array[j+1] = tmp
//             }
//         }
//     }
//     return array;
// }

//3)
function bubbleSort(array){
    for(let i = 0; i < array.length; i++){
        for(let j = 0; j < array.length; j++){
            if(array[j+1] < array[j]){
                let tmp = array[j];
                array[j] = array[j+1];
                array[j+1] = tmp
            }
        }
    }
    return array
}

console.log('bubbleSort(arrForSort2) ', bubbleSort(arrForSort2)) 


//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
const arrForSort3 = [0,3,2,5,6,8,1,9,4,2,1,2,9,6,4,1,7,-1, -5, 23,6,2,35,6,3,32] 


//1) 
// function quickSort(array) {
//     if (array.length <= 1) {
//         return array
//     }
//     let pivotIndex = Math.floor(array.length / 2);
//     let pivot = array[pivotIndex]
//     let less = []
//     let greater = []
//     for (let i = 0; i < array.length; i++) {
//         if(i === pivotIndex)
//             continue
//         if (array[i] < pivot) {
//             less.push(array[i])
//         } else {
//             greater.push(array[i])
//         }
//     }
//     return [...quickSort(less), pivot, ...quickSort(greater)]
// }

//2)

// function quickSort(array){
//     if(array.length <= 1){
//         return array
//     }

//     let pivotIndex = Math.floor(array.length / 2);
//     let pivot = array[pivotIndex]
//     let less = [];
//     let greater = []
//     for(let i = 0; i < array.length; i++){
//         if(i === pivotIndex){
//             continue
//         }
//         if(array[i] < pivot){
//             less.push(array[i])
//         }else{
//             greater.push(array[i])
//         }
//     }
//     return [...quickSort(less), pivot, ...quickSort(greater)]
// }

//3)
// function quickSort(array){
//     if(array.length <= 1){
//         return array
//     }

//     let pivotIndex = Math.floor((array.length / 2))
//     let pivot = array[pivotIndex]
//     let greater = [];
//     let less = [];
//     for(let i = 0; i < array.length; i++){
//         if(i === pivotIndex){ 
//             continue
//         }
//         if(array[i] < pivot){
//             less.push(array[i])
//         }else{
//             greater.push(array[i])
//         }
//     }

//     return [...quickSort(less), pivot, ...quickSort(greater)]
// }

//4)

function quickSort(array){
    if(array.length <= 1){
        return array
    }

    let pivotIndex = Math.floor(array.length / 2)
    let pivot = array[pivotIndex]
    let greater = []
    let less = []

    for(let i = 0; i < array.length; i++){
        if(i === pivotIndex){
            continue
        }

        if(array[i] < pivot){
            less.push(array[i])
        }else{
            greater.push(array[i])
        }
    }

    return [...quickSort(less), pivot, ...quickSort(greater)]
}


console.log('quickSort(arrForSort3) ', quickSort(arrForSort3))

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------

//1)
const graph = {}
graph.a = ['b', 'c']
graph.b = ['f']
graph.c = ['d', 'e']
graph.d = ['f']
graph.e = ['f']
graph.f = ['g']

function breadthSearch(graph, start, end) {
    let queue = []
    queue.push(start)
    while (queue.length > 0) {
        const current = queue.shift()
        if (!graph[current]) {
            graph[current] = []
        }
        if (graph[current].includes(end)) {
            return true
        } else {
            queue = [...queue, ...graph[current]]
        }
    }
    return false
}

console.log(`breadthSearch(graph, 'a', 'e') `, breadthSearch(graph, 'a', 'e'))

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------

const _graph = {}
_graph.a = {b: 2, c: 1}
_graph.b = {f: 7}
_graph.c = {d: 5, e: 2}
_graph.d = {f: 2}
_graph.e = {f: 1}
_graph.f = {g: 1}
_graph.g = {}

function shortPath(graph, start, end) {
    const costs = {}
    const processed = []
    let neighbors = {}
    Object.keys(graph).forEach(node => {
        if (node !== start) {
            let value = graph[start][node]
            costs[node] = value || 100000000
        }
    })
    let node = findNodeLowestCost(costs, processed)
    while (node) {
        const cost = costs[node]
        neighbors = graph[node]
        Object.keys(neighbors).forEach(neighbor => {
            let newCost = cost + neighbors[neighbor]
            if (newCost < costs[neighbor]) {
                costs[neighbor] = newCost
            }
        })
        processed.push(node)
        node = findNodeLowestCost(costs, processed)
    }
    return costs
}


function findNodeLowestCost(costs, processed) {
    let lowestCost = 100000000
    let lowestNode;
    Object.keys(costs).forEach(node => {
        let cost = costs[node]
        if (cost < lowestCost && !processed.includes(node)) {
            lowestCost = cost
            lowestNode = node
        }
    })
    return lowestNode
}

console.log(shortPath(_graph, 'a', 'g'));

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------

const tree = [
    {
        v: 5,
        c: [
            {
                v:10,
                c: [
                    {
                        v:11,
                    }
                ]
            },
            {
                v:7,
                c: [
                    {
                        v:5,
                        c: [
                            {
                                v:1
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        v: 5,
        c: [
            {
                v:10
            },
            {
                v:15
            }
        ]
    }
]

const recursive = (tree) => {
    let sum = 0;
    tree.forEach(node => {
        sum += node.v
        if(!node.c) {
            return node.v
        }
        sum += recursive(node.c)
    })
    return sum
}

const iteration = (tree) => {
    if (!tree.length) {
        return 0
    }
    let sum = 0
    let stack = []
    tree.forEach(node => stack.push(node));
    while (stack.length) {
        const node = stack.pop()
        sum += node.v
        if (node.c) {
            node.c.forEach(child => stack.push(child))
        }
    }
    return sum
}

console.log(iteration(tree))
console.log(recursive(tree))

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------

function cashFunction(fn) {
    const cash = {}
    return function (n) {
        if (cash[n]) {
            console.log('Взято из кеша', cash[n])
            return cash[n]
        }
        let result = fn(n)
        console.log('Посчитала функция = ', result)
        cash[n] = result
        return result;
    };
}

function factorial(n) {
    let result = 1
    while (n != 1) {
        result *= n
        n -= 1
    }
    return result
}

const cashFactorial = cashFunction(factorial)

cashFactorial(5)
cashFactorial(4)
cashFactorial(3)
cashFactorial(4)
cashFactorial(5)
cashFactorial(1)

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------

class LinkedList {
    constructor() {
        this.size = 0
        this.root = null
    }

    add(value) {
        if (this.size === 0) {
            this.root = new Node(value);
            this.size += 1;
            return true;
        }
        let node = this.root
        while (node.next) {
            node = node.next
        }
        let newNode = new Node(value)
        node.next = newNode
        this.size += 1
    }

    getSize() {
        return this.size
    }

    print() {
        let result = []
        let node = this.root
        while (node) {
            result.push(node.value)
            node = node.next
        }
        console.log(result);;
    }
}

class Node {
    constructor(value) {
        this.value = value
        this.next = null
    }
}

const list = new LinkedList()
list.add(5)
list.add(3)
list.add(2)
list.add(5)
list.add(7)

list.print()

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//1. Copying to the clipboard
const copyToClipboard = (text) => navigator.clipboard.writeText(text);

copyToClipboard("This Sring is Copied To Clipboard.");

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//2. Obtaining a random number within a certain range
const randomNumberInRange = (min = 0, max = 100) => Math.floor(Math.random() * (max - min + 1)) + min;

randomNumberInRange()

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//3. Converting RGB to hexadecimal code
const rgbToHex = (r, g, b) => "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);

rgbToHex(0, 51, 255); 

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//4. Scroll to the top of the page
const goToTop = () => window.scrollTo(0, 0);

goToTop();

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//5. Finding the number of intermediate days between two dates
const dayDif = (date1, date2) => Math.ceil(Math.abs(date1.getTime() - date2.getTime()) / 86400000)

dayDif(new Date("2020-10-21"), new Date("2021-10-22"))

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//6. Generation of random hex color codes
const randomHex = () => `#${Math.floor(Math.random() * 0xffffff).toString(16).padEnd(6, "0")}`;

console.log(randomHex());

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//7. Checking whether the specified day is a weekday
const isWeekday = (date) => date.getDay() % 6 !== 0;

console.log(isWeekday(new Date(2021, 0, 11)));
// Результат: true(понедельник)
console.log(isWeekday(new Date(2021, 0, 10)));
// Результат: false(воскресенье)

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//8. Conversion of temperature values in Fahrenheit / Celsius
const celsiusToFahrenheit = (celsius) => celsius * 9/5 + 32;
const fahrenheitToCelsius = (fahrenheit) => (fahrenheit - 32) * 5/9;

celsiusToFahrenheit(15);    // 59
celsiusToFahrenheit(0);     // 32
celsiusToFahrenheit(-20);   // -4

fahrenheitToCelsius(59);    // 15
fahrenheitToCelsius(32);    // 0

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//9. Checking whether the user has an Apple device
const isAppleDevice = /Mac|iPod|iPhone|iPad/.test(navigator.platform);

console.log(isAppleDevice);

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//10. Getting the time from the date
const timeFromDate = date => date.toTimeString().slice(0, 8);

console.log(timeFromDate(new Date(2021, 0, 10, 17, 30, 0)));

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//11. Extract HTML from text
const stripHtml = html => (new DOMParser().parseFromString(html, 'text/html')).body.textContent || '';

stripHtml('<h1>Hello <strong>World</strong>!!!</h1>');

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//12. Toggle "show/hide item"
const toggleElementDisplay = element => element.style.display = (element.style.display === "none" ? "block" : "none");

toggleElementDisplay(document.body)

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//13. Line spread
const stringReverse = str => str.split("").reverse().join("");

stringReverse('elcitra ym ekil uoy epoh i');

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//14. Highlighting a line with a capital letter
const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);

capitalize("i hope you like my article.");

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//15. Rounding decimal fractions to a specified number of decimal places
Number((1.005).toFixed(2)) //outputs 1 instead of 1.01
Number((1.555).toFixed(2)) //outputs 1.55 instead of 1.56

const round = (n, d) => Number(Math.round(n + "e" + d) + "e-" + d);

round(1.005, 2) //1.01
round(1.555, 2) //1.56

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//16. Stirring the array
const shuffleArray = (arr) => arr.sort(() => 0.5 - Math.random());

console.log(shuffleArray([1, 2, 3, 4]));

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//17. Defining dark mode
const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;

console.log(isDarkMode) 

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//18. Getting request parameters from a URL
const getParameters = (URL) => JSON.parse('{"' + decodeURI(URL.split("?")[1]).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g, '":"') +'"}');

getParameters("https://www.google.de/search?q=cars&start=40");

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//19. Getting the average value of an array of numbers
const average = arr => arr.reduce((a, b) => a + b) / arr.length;

average([21, 56, 23, 122, 67])


//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//20. Checking the current user's support for touch events
const touchSupported = () => {
    ('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch);
  }
  
  console.log(touchSupported());
  //-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//21. Determining the sequential number of the day of the year
const dayOfYear = (date) => Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);

dayOfYear(new Date());

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//22. Getting the value of a browser cookie
const cookie = name => `; ${document.cookie}`.split(`; ${name}=`).pop().split(';').shift();

cookie('_ga');

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//23. Clear all browser cookies
const clearCookies = document.cookie
                             .split(';')
                             .forEach(cookie => document.cookie = cookie
                                                                        .replace(/^ +/, '')
                                                                        .replace(/=.*/, `=;expires=${new Date(0).toUTCString()};path=/`));

 //-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//24. Getting a random boolean value (true/false)
const randomBoolean = () => Math.random() >= 0.5;

console.log(randomBoolean());

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//25. Removing duplicates in an array
const removeDuplicates = (arr) => [...new Set(arr)];

removeDuplicates([31, 56, 12, 31, 45, 12, 31]);

//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//26. Checking correctness of date
const isDateValid = (...val) => !Number.isNaN(new Date(...val).valueOf());

isDateValid("December 17, 1995 03:24:00");
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//27. Getting a random element from an array
const randomArrayItem = (arr) => arr[Math.floor(Math.random() * arr.length)];

randomArrayItem(['lol', 'a', 2, 'foo', 52, 'Jhon', 'hello', 57]);

                                                                    
